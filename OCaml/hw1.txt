CS 131 Homework 1 - Report

For the set manipulation functions, my approach was first reading the Lists and Pervasives documentation recommended in the spec. These gave me a solid understanding of concepts like matching, head::tail, List.filter and List.mem which I used extensively in my solutions. 

I was initially confused by computed_fixed_point, but walking through some examples online and looking at the test cases in hw1sample.ml was helpful.

For filter_reachable, I broke my solution into 3 functions:
	a) get_nonterminals: took the right-hand-side of a single line from a grammar, and returned the nonterminal symbols using matching.
	b) get_reachable_symbols: took a grammar and its currently reachable symbols, then examined a line using get_nonterminals and recursed using the newly found symbols. 
	c) filter_reachable: used computed_fixed_point and get_reachable_symbols to continually search for all reachable symbols. Then used List.filter and List.mem to filter out the symbols in the given grammar that weren't identified as reachable. 
An approach I rejected was doing the inverse by using a get_unreachable_symbols and set_diff instead. The code wasn't much different, but I didn't see a major advantage for either method. 